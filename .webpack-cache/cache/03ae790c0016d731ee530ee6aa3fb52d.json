{"remainingRequest":"/wiki/node_modules/babel-loader/lib/index.js??ref--0-1!/wiki/node_modules/vuetify/lib/components/VSkeletonLoader/VSkeletonLoader.js","dependencies":[{"path":"/wiki/node_modules/vuetify/lib/components/VSkeletonLoader/VSkeletonLoader.js","mtime":1716088148801},{"path":"/wiki/node_modules/cache-loader/dist/cjs.js","mtime":1716088090639},{"path":"/wiki/node_modules/babel-loader/lib/index.js","mtime":1716088089693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gU3R5bGVzCmltcG9ydCAiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVlNrZWxldG9uTG9hZGVyL1ZTa2VsZXRvbkxvYWRlci5zYXNzIjsgLy8gTWl4aW5zCgppbXBvcnQgRWxldmF0YWJsZSBmcm9tICcuLi8uLi9taXhpbnMvZWxldmF0YWJsZSc7CmltcG9ydCBNZWFzdXJhYmxlIGZyb20gJy4uLy4uL21peGlucy9tZWFzdXJhYmxlJzsKaW1wb3J0IFRoZW1lYWJsZSBmcm9tICcuLi8uLi9taXhpbnMvdGhlbWVhYmxlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgbWl4aW5zIGZyb20gJy4uLy4uL3V0aWwvbWl4aW5zJzsKaW1wb3J0IHsgZ2V0U2xvdCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7Ci8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBtaXhpbnMoRWxldmF0YWJsZSwgTWVhc3VyYWJsZSwgVGhlbWVhYmxlKS5leHRlbmQoewogIG5hbWU6ICdWU2tlbGV0b25Mb2FkZXInLAogIHByb3BzOiB7CiAgICBib2lsZXJwbGF0ZTogQm9vbGVhbiwKICAgIGxvYWRpbmc6IEJvb2xlYW4sCiAgICB0aWxlOiBCb29sZWFuLAogICAgdHJhbnNpdGlvbjogU3RyaW5nLAogICAgdHlwZTogU3RyaW5nLAogICAgdHlwZXM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiAoe30pCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgYXR0cnMoKSB7CiAgICAgIGlmICghdGhpcy5pc0xvYWRpbmcpIHJldHVybiB0aGlzLiRhdHRyczsKICAgICAgcmV0dXJuICF0aGlzLmJvaWxlcnBsYXRlID8gewogICAgICAgICdhcmlhLWJ1c3knOiB0cnVlLAogICAgICAgICdhcmlhLWxpdmUnOiAncG9saXRlJywKICAgICAgICByb2xlOiAnYWxlcnQnLAogICAgICAgIC4uLnRoaXMuJGF0dHJzCiAgICAgIH0gOiB7fTsKICAgIH0sCgogICAgY2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAndi1za2VsZXRvbi1sb2FkZXItLWJvaWxlcnBsYXRlJzogdGhpcy5ib2lsZXJwbGF0ZSwKICAgICAgICAndi1za2VsZXRvbi1sb2FkZXItLWlzLWxvYWRpbmcnOiB0aGlzLmlzTG9hZGluZywKICAgICAgICAndi1za2VsZXRvbi1sb2FkZXItLXRpbGUnOiB0aGlzLnRpbGUsCiAgICAgICAgLi4udGhpcy50aGVtZUNsYXNzZXMsCiAgICAgICAgLi4udGhpcy5lbGV2YXRpb25DbGFzc2VzCiAgICAgIH07CiAgICB9LAoKICAgIGlzTG9hZGluZygpIHsKICAgICAgcmV0dXJuICEoJ2RlZmF1bHQnIGluIHRoaXMuJHNjb3BlZFNsb3RzKSB8fCB0aGlzLmxvYWRpbmc7CiAgICB9LAoKICAgIHJvb3RUeXBlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBhY3Rpb25zOiAnYnV0dG9uQDInLAogICAgICAgIGFydGljbGU6ICdoZWFkaW5nLCBwYXJhZ3JhcGgnLAogICAgICAgIGF2YXRhcjogJ2F2YXRhcicsCiAgICAgICAgYnV0dG9uOiAnYnV0dG9uJywKICAgICAgICBjYXJkOiAnaW1hZ2UsIGNhcmQtaGVhZGluZycsCiAgICAgICAgJ2NhcmQtYXZhdGFyJzogJ2ltYWdlLCBsaXN0LWl0ZW0tYXZhdGFyJywKICAgICAgICAnY2FyZC1oZWFkaW5nJzogJ2hlYWRpbmcnLAogICAgICAgIGNoaXA6ICdjaGlwJywKICAgICAgICAnZGF0ZS1waWNrZXInOiAnbGlzdC1pdGVtLCBjYXJkLWhlYWRpbmcsIGRpdmlkZXIsIGRhdGUtcGlja2VyLW9wdGlvbnMsIGRhdGUtcGlja2VyLWRheXMsIGFjdGlvbnMnLAogICAgICAgICdkYXRlLXBpY2tlci1vcHRpb25zJzogJ3RleHQsIGF2YXRhckAyJywKICAgICAgICAnZGF0ZS1waWNrZXItZGF5cyc6ICdhdmF0YXJAMjgnLAogICAgICAgIGhlYWRpbmc6ICdoZWFkaW5nJywKICAgICAgICBpbWFnZTogJ2ltYWdlJywKICAgICAgICAnbGlzdC1pdGVtJzogJ3RleHQnLAogICAgICAgICdsaXN0LWl0ZW0tYXZhdGFyJzogJ2F2YXRhciwgdGV4dCcsCiAgICAgICAgJ2xpc3QtaXRlbS10d28tbGluZSc6ICdzZW50ZW5jZXMnLAogICAgICAgICdsaXN0LWl0ZW0tYXZhdGFyLXR3by1saW5lJzogJ2F2YXRhciwgc2VudGVuY2VzJywKICAgICAgICAnbGlzdC1pdGVtLXRocmVlLWxpbmUnOiAncGFyYWdyYXBoJywKICAgICAgICAnbGlzdC1pdGVtLWF2YXRhci10aHJlZS1saW5lJzogJ2F2YXRhciwgcGFyYWdyYXBoJywKICAgICAgICBwYXJhZ3JhcGg6ICd0ZXh0QDMnLAogICAgICAgIHNlbnRlbmNlczogJ3RleHRAMicsCiAgICAgICAgdGFibGU6ICd0YWJsZS1oZWFkaW5nLCB0YWJsZS10aGVhZCwgdGFibGUtdGJvZHksIHRhYmxlLXRmb290JywKICAgICAgICAndGFibGUtaGVhZGluZyc6ICdoZWFkaW5nLCB0ZXh0JywKICAgICAgICAndGFibGUtdGhlYWQnOiAnaGVhZGluZ0A2JywKICAgICAgICAndGFibGUtdGJvZHknOiAndGFibGUtcm93LWRpdmlkZXJANicsCiAgICAgICAgJ3RhYmxlLXJvdy1kaXZpZGVyJzogJ3RhYmxlLXJvdywgZGl2aWRlcicsCiAgICAgICAgJ3RhYmxlLXJvdyc6ICd0YWJsZS1jZWxsQDYnLAogICAgICAgICd0YWJsZS1jZWxsJzogJ3RleHQnLAogICAgICAgICd0YWJsZS10Zm9vdCc6ICd0ZXh0QDIsIGF2YXRhckAyJywKICAgICAgICB0ZXh0OiAndGV4dCcsCiAgICAgICAgLi4udGhpcy50eXBlcwogICAgICB9OwogICAgfQoKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbkJvbmUodGV4dCwgY2hpbGRyZW4pIHsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsKICAgICAgICBzdGF0aWNDbGFzczogYHYtc2tlbGV0b24tbG9hZGVyX18ke3RleHR9IHYtc2tlbGV0b24tbG9hZGVyX19ib25lYAogICAgICB9LCBjaGlsZHJlbik7CiAgICB9LAoKICAgIGdlbkJvbmVzKGJvbmUpIHsKICAgICAgLy8gZS5nLiAndGV4dEAzJwogICAgICBjb25zdCBbdHlwZSwgbGVuZ3RoXSA9IGJvbmUuc3BsaXQoJ0AnKTsKCiAgICAgIGNvbnN0IGdlbmVyYXRvciA9ICgpID0+IHRoaXMuZ2VuU3RydWN0dXJlKHR5cGUpOyAvLyBHZW5lcmF0ZSBhIGxlbmd0aCBhcnJheSBiYXNlZCB1cG9uCiAgICAgIC8vIHZhbHVlIGFmdGVyIEAgaW4gdGhlIGJvbmUgc3RyaW5nCgoKICAgICAgcmV0dXJuIEFycmF5LmZyb20oewogICAgICAgIGxlbmd0aAogICAgICB9KS5tYXAoZ2VuZXJhdG9yKTsKICAgIH0sCgogICAgLy8gRml4IHR5cGUgd2hlbiB0aGlzIGlzIG1lcmdlZAogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L3B1bGwvMzMwNTAKICAgIGdlblN0cnVjdHVyZSh0eXBlKSB7CiAgICAgIGxldCBjaGlsZHJlbiA9IFtdOwogICAgICB0eXBlID0gdHlwZSB8fCB0aGlzLnR5cGUgfHwgJyc7CiAgICAgIGNvbnN0IGJvbmUgPSB0aGlzLnJvb3RUeXBlc1t0eXBlXSB8fCAnJzsgLy8gRW5kIG9mIHJlY3Vyc2lvbiwgZG8gbm90aGluZwoKICAgICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5LCBicmFjZS1zdHlsZSAqLwoKICAgICAgaWYgKHR5cGUgPT09IGJvbmUpIHt9IC8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ2hlYWRpbmcsIHBhcmFncmFwaCwgdGV4dEAyJwogICAgICBlbHNlIGlmICh0eXBlLmluZGV4T2YoJywnKSA+IC0xKSByZXR1cm4gdGhpcy5tYXBCb25lcyh0eXBlKTsgLy8gQXJyYXkgb2YgdmFsdWVzIC0gZS5nLiAncGFyYWdyYXBoQDQnCiAgICAgICAgZWxzZSBpZiAodHlwZS5pbmRleE9mKCdAJykgPiAtMSkgcmV0dXJuIHRoaXMuZ2VuQm9uZXModHlwZSk7IC8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ2NhcmRAMicKICAgICAgICAgIGVsc2UgaWYgKGJvbmUuaW5kZXhPZignLCcpID4gLTEpIGNoaWxkcmVuID0gdGhpcy5tYXBCb25lcyhib25lKTsgLy8gQXJyYXkgb2YgdmFsdWVzIC0gZS5nLiAnbGlzdC1pdGVtQDInCiAgICAgICAgICAgIGVsc2UgaWYgKGJvbmUuaW5kZXhPZignQCcpID4gLTEpIGNoaWxkcmVuID0gdGhpcy5nZW5Cb25lcyhib25lKTsgLy8gU2luZ2xlIHZhbHVlIC0gZS5nLiAnY2FyZC1oZWFkaW5nJwogICAgICAgICAgICAgIGVsc2UgaWYgKGJvbmUpIGNoaWxkcmVuLnB1c2godGhpcy5nZW5TdHJ1Y3R1cmUoYm9uZSkpOwoKICAgICAgcmV0dXJuIFt0aGlzLmdlbkJvbmUodHlwZSwgY2hpbGRyZW4pXTsKICAgIH0sCgogICAgZ2VuU2tlbGV0b24oKSB7CiAgICAgIGNvbnN0IGNoaWxkcmVuID0gW107CiAgICAgIGlmICghdGhpcy5pc0xvYWRpbmcpIGNoaWxkcmVuLnB1c2goZ2V0U2xvdCh0aGlzKSk7ZWxzZSBjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuU3RydWN0dXJlKCkpOwogICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqLwoKICAgICAgaWYgKCF0aGlzLnRyYW5zaXRpb24pIHJldHVybiBjaGlsZHJlbjsKICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KCiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uJywgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBuYW1lOiB0aGlzLnRyYW5zaXRpb24KICAgICAgICB9LAogICAgICAgIC8vIE9ubHkgc2hvdyB0cmFuc2l0aW9uIHdoZW4KICAgICAgICAvLyBjb250ZW50IGhhcyBiZWVuIGxvYWRlZAogICAgICAgIG9uOiB7CiAgICAgICAgICBhZnRlckVudGVyOiB0aGlzLnJlc2V0U3R5bGVzLAogICAgICAgICAgYmVmb3JlRW50ZXI6IHRoaXMub25CZWZvcmVFbnRlciwKICAgICAgICAgIGJlZm9yZUxlYXZlOiB0aGlzLm9uQmVmb3JlTGVhdmUsCiAgICAgICAgICBsZWF2ZUNhbmNlbGxlZDogdGhpcy5yZXNldFN0eWxlcwogICAgICAgIH0KICAgICAgfSwgY2hpbGRyZW4pOwogICAgfSwKCiAgICBtYXBCb25lcyhib25lcykgewogICAgICAvLyBSZW1vdmUgc3BhY2VzIGFuZCByZXR1cm4gYXJyYXkgb2Ygc3RydWN0dXJlcwogICAgICByZXR1cm4gYm9uZXMucmVwbGFjZSgvXHMvZywgJycpLnNwbGl0KCcsJykubWFwKHRoaXMuZ2VuU3RydWN0dXJlKTsKICAgIH0sCgogICAgb25CZWZvcmVFbnRlcihlbCkgewogICAgICB0aGlzLnJlc2V0U3R5bGVzKGVsKTsKICAgICAgaWYgKCF0aGlzLmlzTG9hZGluZykgcmV0dXJuOwogICAgICBlbC5faW5pdGlhbFN0eWxlID0gewogICAgICAgIGRpc3BsYXk6IGVsLnN0eWxlLmRpc3BsYXksCiAgICAgICAgdHJhbnNpdGlvbjogZWwuc3R5bGUudHJhbnNpdGlvbgogICAgICB9OwogICAgICBlbC5zdHlsZS5zZXRQcm9wZXJ0eSgndHJhbnNpdGlvbicsICdub25lJywgJ2ltcG9ydGFudCcpOwogICAgfSwKCiAgICBvbkJlZm9yZUxlYXZlKGVsKSB7CiAgICAgIGVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnLCAnaW1wb3J0YW50Jyk7CiAgICB9LAoKICAgIHJlc2V0U3R5bGVzKGVsKSB7CiAgICAgIGlmICghZWwuX2luaXRpYWxTdHlsZSkgcmV0dXJuOwogICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gZWwuX2luaXRpYWxTdHlsZS5kaXNwbGF5IHx8ICcnOwogICAgICBlbC5zdHlsZS50cmFuc2l0aW9uID0gZWwuX2luaXRpYWxTdHlsZS50cmFuc2l0aW9uOwogICAgICBkZWxldGUgZWwuX2luaXRpYWxTdHlsZTsKICAgIH0KCiAgfSwKCiAgcmVuZGVyKGgpIHsKICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAndi1za2VsZXRvbi1sb2FkZXInLAogICAgICBhdHRyczogdGhpcy5hdHRycywKICAgICAgb246IHRoaXMuJGxpc3RlbmVycywKICAgICAgY2xhc3M6IHRoaXMuY2xhc3NlcywKICAgICAgc3R5bGU6IHRoaXMuaXNMb2FkaW5nID8gdGhpcy5tZWFzdXJhYmxlU3R5bGVzIDogdW5kZWZpbmVkCiAgICB9LCBbdGhpcy5nZW5Ta2VsZXRvbigpXSk7CiAgfQoKfSk7"},null]}