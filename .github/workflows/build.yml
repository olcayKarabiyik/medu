name: Build + Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  BASE_DEV_VERSION: 1.0.0

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set Build Variables
      run: |
        if [[ "$GITHUB_REF" =~ ^refs/tags/v* ]]; then
          echo "Using TAG mode: $GITHUB_REF_NAME"
          echo "REL_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV
        else
          echo "Using BRANCH mode: v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER"
          echo "REL_VERSION=v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "REL_VERSION_STRICT=$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        fi

    - name: Disable DEV Flag + Set Version
      run: |
        sudo apt-get install jq -y
        mv package.json pkg-temp.json
        jq --arg vs "$REL_VERSION_STRICT" -r '. + {dev:false, version:$vs}' pkg-temp.json > package.json
        rm pkg-temp.json
        cat package.json

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: dev/build/Dockerfile
        push: true
        tags: |
          requarks/wiki:canary
          requarks/wiki:canary-${{ env.REL_VERSION_STRICT }}
          ghcr.io/requarks/wiki:canary
          ghcr.io/requarks/wiki:canary-${{ env.REL_VERSION_STRICT }}

    - name: Extract compiled files
      run: |
        mkdir -p _dist
        docker create --name wiki ghcr.io/requarks/wiki:canary-$REL_VERSION_STRICT
        docker cp wiki:/wiki _dist
        docker rm wiki
        rm _dist/wiki/config.yml
        cp ./config.sample.yml _dist/wiki/config.sample.yml
        find _dist/wiki/ -printf "%P\n" | tar -czf wiki-js.tar.gz --no-recursion -C _dist/wiki/ -T -

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: drop
        path: wiki-js.tar.gz

  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    needs: [build]

    strategy:
      matrix:
        dbtype: [postgres]

    steps:
    - uses: actions/checkout@v4

    - name: Set Test Variables
      run: |
        if [[ "$GITHUB_REF" =~ ^refs/tags/v* ]]; then
          echo "Using TAG mode: $GITHUB_REF_NAME"
          echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV
        else
          echo "Using BRANCH mode: v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER"
          echo "REL_VERSION_STRICT=$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        fi

    - name: Run Tests
      env:
        MATRIXENV: ${{ matrix.dbtype }}
        CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
      run: |
        chmod u+x dev/cypress/ci-setup.sh
        dev/cypress/ci-setup.sh
        docker run --name cypress --ipc=host --shm-size 1G -v $GITHUB_WORKSPACE:/e2e -w /e2e cypress/included:4.9.0 --record --key "$CYPRESS_KEY" --headless --group "$MATRIXENV" --ci-build-id "$REL_VERSION_STRICT-run$GITHUB_RUN_NUMBER.$GITHUB_RUN_ATTEMPT" --tag "$REL_VERSION_STRICT" --config baseUrl=http://172.17.0.1:3000

  beta:
    name: Publish Beta Images
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    permissions:
      packages: write

    steps:
    - name: Set Version Variables
      run: |
        echo "Using TAG mode: $GITHUB_REF_NAME"
        echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Publish Release Images
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: prod
    needs: [beta]
    permissions:
      packages: write
      contents: write

    steps:
    - name: Set Version Variables
      run: |
        echo "Using TAG mode: $GITHUB_REF_NAME"
        echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Linux Build
      uses: actions/download-artifact@v4
      with:
        name: drop
        path: drop

  # build-do-image:
  #   name: Build DigitalOcean Image
  #   runs-on: ubuntu-latest
  #   needs: [release]

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set Version Variables
  #     run: |
  #       echo "Using TAG mode: $GITHUB_REF_NAME"
  #       echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV

  #   - name: Install Packer
  #     run: |
  #       curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  #       sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  #       sudo apt-get update && sudo apt-get install packer

  #   - name: Build Droplet Image
  #     env:
  #       DIGITALOCEAN_API_TOKEN: ${{ secrets.DO_TOKEN }}
  #       WIKI_APP_VERSION: ${{ env.REL_VERSION_STRICT }}
  #     working-directory: dev/packer
  #     run: |
  #       packer build digitalocean.json
